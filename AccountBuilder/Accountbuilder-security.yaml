AWSTemplateFormatVersion: 2010-09-09
Description: Account Builder Template for security.
Parameters:
  accountemail:
    Description: "Account Email address"
    Type: String
    AllowedPattern: ".+"
    ConstraintDescription: "Must provide a valid email address"

  accountname:
    Description: "Name of the new AWS Account Name"
    Type: String
    Default: security
    AllowedPattern: ".+"
    ConstraintDescription: "Provide the account name"
    

  organizationunitname:
    Description: "Name of the organization unit to which the account should be moved to."
    Type: String
    Default: "None"
    AllowedPattern: ".+"

  stackname:
    Description: "Name given to the stack deployed in the created account."
    Type: String
    AllowedPattern: ".+"
    ConstraintDescription: "Must contain only letters, numbers, dashes and start with an alpha character"

  stackregion:
    Description: "Region for deploying the baseline template in the created account"
    Default: "ap-southeast-1"
    Type: String
    AllowedPattern: ".+"
    AllowedValues:
      [
        "us-east-2",
        "us-east-1",
        "us-west-1",
        "us-west-2",
        "ap-northeast-1",
        "ap-northeast-2",
        "ap-northeast-3",
        "ap-south-1",
        "ap-southeast-1",
        "ap-southeast-2",
        "ca-central-1",
        "cn-north-1",
        "cn-northwest-1",
        "eu-central-1",
        "eu-west-1",
        "eu-west-2",
        "eu-west-3",
        "sa-east-1",
      ]
    ConstraintDescription: "Must be a valid AWS region"

  sourcebucket:
    Description: "Bucket holding the baseline template file"
    Type: String
    AllowedPattern: ".+"

  baselinetemplate:
    Description: "Baseline template to be deployed in the created account."
    Type: String
    AllowedPattern: ".+"

  AZ1Name:
    Description: Availability Zone 1 Name in Region
    Type: String
    AllowedPattern: ".+"
    AllowedValues:
      [
        "ap-south-1a",
        "ap-south-1b",
        "eu-west-3a",
        "eu-west-3b",
        "eu-west-3c",
        "eu-west-2a",
        "eu-west-2b",
        "eu-west-2c",
        "eu-west-1a",
        "eu-west-1b",
        "eu-west-1c",
        "ap-northeast-3a",
        "ap-northeast-2a",
        "ap-northeast-2c",
        "ap-northeast-1a",
        "ap-northeast-1c",
        "ap-northeast-1d",
        "sa-east-1a",
        "sa-east-1c",
        "ca-central-1a",
        "ca-central-1b",
        "ap-southeast-1a",
        "ap-southeast-1b",
        "ap-southeast-1c",
        "ap-southeast-2a",
        "ap-southeast-2b",
        "ap-southeast-2c",
        "eu-central-1a",
        "eu-central-1b",
        "eu-central-1c",
        "us-east-1a",
        "us-east-1b",
        "us-east-1c",
        "us-east-1d",
        "us-east-1e",
        "us-east-1f",
        "us-east-2a",
        "us-east-2b",
        "us-east-2c",
        "us-west-1b",
        "us-west-1c",
        "us-west-2a",
        "us-west-2b",
        "us-west-2c",
      ]

  AZ2Name:
    Description: Availability Zone 2 Name in Region
    Type: String
    AllowedPattern: ".+"
    AllowedValues:
      [
        "ap-south-1a",
        "ap-south-1b",
        "eu-west-3a",
        "eu-west-3b",
        "eu-west-3c",
        "eu-west-2a",
        "eu-west-2b",
        "eu-west-2c",
        "eu-west-1a",
        "eu-west-1b",
        "eu-west-1c",
        "ap-northeast-3a",
        "ap-northeast-2a",
        "ap-northeast-2c",
        "ap-northeast-1a",
        "ap-northeast-1c",
        "ap-northeast-1d",
        "sa-east-1a",
        "sa-east-1c",
        "ca-central-1a",
        "ca-central-1b",
        "ap-southeast-1a",
        "ap-southeast-1b",
        "ap-southeast-1c",
        "ap-southeast-2a",
        "ap-southeast-2b",
        "ap-southeast-2c",
        "eu-central-1a",
        "eu-central-1b",
        "eu-central-1c",
        "us-east-1a",
        "us-east-1b",
        "us-east-1c",
        "us-east-1d",
        "us-east-1e",
        "us-east-1f",
        "us-east-2a",
        "us-east-2b",
        "us-east-2c",
        "us-west-1b",
        "us-west-1c",
        "us-west-2a",
        "us-west-2b",
        "us-west-2c",
      ]
Resources:
  adminroleParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: AdminRoleArn
      Type: String
      Value: !Sub 'arn:aws:iam::${TriggerLambda.AccountID}:role/AWSLandingZoneSecurityAdministratorRole'
      Description: admin role arn from security account.
      
  readonlyroleParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: ReadOnlyArn
      Type: String
      Value: !Sub 'arn:aws:iam::${TriggerLambda.AccountID}:role/AWSLandingZoneSecurityReadOnlyRole'
      Description: read only role arn from security account.
      

  AccountBuilderLambda:
    Type: "AWS::Lambda::Function"
    Properties:
      Handler: "AccountCreationLambda.main"
      Runtime: "python3.6"
      Role: !GetAtt LambdaExecuteRole.Arn
      Timeout: 600
      TracingConfig:
        Mode: "Active"
      Code:
        S3Bucket: !Ref sourcebucket
        S3Key: "AccountCreationLambda-security.zip"
      Environment:
        Variables:
          "accountemail": !Ref accountemail
          "accountname": !Ref accountname
          "organizationunitname": !Ref "organizationunitname"
          "stackname": !Ref stackname
          "stackregion": !Ref stackregion
          "sourcebucket": !Ref sourcebucket
          "baselinetemplate": !Ref baselinetemplate
          "AZ1Name": !Ref AZ1Name
          "AZ2Name": !Ref AZ2Name
  LambdaExecuteRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: "Allow"
          Principal:
            Service:
              - "lambda.amazonaws.com"
          Action:
            - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: LambdaAccessRole
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              Effect: Allow
              Action: "*"
              Resource: "*"

  TriggerLambda:
    Type: "Custom::TriggerLambda"
    DeletionPolicy: Retain
    DependsOn:
      - AccountBuilderLambda
      - LambdaExecuteRole
    Properties:
      ServiceToken: !GetAtt AccountBuilderLambda.Arn

Outputs:
  Message:
    Description: Execution Status
    Value: !GetAtt "TriggerLambda.Message"

  AccountID:
    Description: ID of the new account
    Value: !GetAtt "TriggerLambda.AccountID"
  
  AdminRoleArn:
    Description: Admin role Arn
    Value: !Sub 'arn:aws:iam::${TriggerLambda.AccountID}:role/AWSLandingZoneSecurityAdministratorRole'
    Export:
      Name: AdminRoleArn
  ReadOnlyRoleArn:
    Description: Role arn for read-only access.
    Value:  !Sub 'arn:aws:iam::${TriggerLambda.AccountID}:role/AWSLandingZoneSecurityReadOnlyRole'
    Export:
      Name: ReadOnlyRoleArn